generator client {
  provider        = "prisma-client-js"
  output          = "../node_modules/.prisma/client"
  previewFeatures = ["typedSql"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin {
  id          Int           @id @default(autoincrement())
  nama        String?       @db.VarChar(100)
  password    String?       @db.VarChar(100)
  email       String?       @unique(map: "email") @db.VarChar(120)
  event       event[]
  kelas       kelas[]
  mata_kuliah mata_kuliah[]
  ruangan     ruangan[]
}

model asisten {
  id                    Int             @id @default(autoincrement())
  nim                   String?         @unique(map: "nim") @db.VarChar(12)
  email                 String?         @unique(map: "email") @db.VarChar(120)
  nama                  String?         @db.VarChar(120)
  status                asisten_status?
  komitmen_url          String?         @db.Text
  dokumen_pendukung_url String?         @db.Text
  event_id              Int?
  mata_kuliah_pilihan   Json?
  event                 event?          @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "asisten_ibfk_1")
  kelas                 kelas[]

  @@index([event_id], map: "event_id")
}

model event {
  id        Int          @id @default(autoincrement())
  admin_id  Int?
  nama      String?      @db.VarChar(120)
  jenis     event_jenis?
  mulai     DateTime?    @db.Timestamp(0)
  selesai   DateTime?    @db.Timestamp(0)
  asisten   asisten[]
  admin     admin?       @relation(fields: [admin_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "event_ibfk_1")
  praktikan praktikan[]

  @@index([admin_id], map: "admin_id")
}

model penilaian {
  id           Int             @id @default(autoincrement())
  laporan_id   Int?
  praktikan_id Int?
  tipe         penilaian_tipe?
  nilai        Float?
  laporan      laporan?        @relation(fields: [laporan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "penilaian_ibfk_1")
  praktikan    praktikan?      @relation(fields: [praktikan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "penilaian_ibfk_2")

  @@index([laporan_id], map: "laporan_id")
  @@index([praktikan_id], map: "praktikan_id")
}

model praktikan {
  id              Int               @id @default(autoincrement())
  nim             String?           @unique(map: "nim") @db.VarChar(12)
  email           String?           @unique(map: "email") @db.VarChar(120)
  nama            String?           @db.VarChar(120)
  event_id        Int?
  kehadiran       kehadiran[]
  penilaian       penilaian[]
  event           event?            @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "praktikan_ibfk_1")
  praktikan_kelas praktikan_kelas[]

  @@index([event_id], map: "event_id")
}

model jadwal {
  id              Int       @id @default(autoincrement())
  ruang_id        Int?
  kelas_id        Int?
  mulai           DateTime? @db.Timestamp(0)
  selesai         DateTime? @db.Timestamp(0)
  is_dilaksanakan Boolean?  @default(false)
  ruangan         ruangan?  @relation(fields: [ruang_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "jadwal_ibfk_1")
  kelas           kelas?    @relation(fields: [kelas_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "jadwal_ibfk_2")
  laporan         laporan[]

  @@index([kelas_id], map: "kelas_id")
  @@index([ruang_id], map: "ruang_id")
}

model kehadiran {
  id           Int             @id @default(autoincrement())
  laporan_id   Int?
  praktikan_id Int?
  tipe         kehadiran_tipe?
  laporan      laporan?        @relation(fields: [laporan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "kehadiran_ibfk_1")
  praktikan    praktikan?      @relation(fields: [praktikan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "kehadiran_ibfk_2")

  @@index([laporan_id], map: "laporan_id")
  @@index([praktikan_id], map: "praktikan_id")
}

model kelas {
  id                  Int               @id @default(autoincrement())
  nama                String?           @db.VarChar(120)
  kapasitas_praktikan Int?
  mata_kuliah_id      Int?
  asisten_id          Int?
  admin_id            Int?
  jadwal              jadwal[]
  mata_kuliah         mata_kuliah?      @relation(fields: [mata_kuliah_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "kelas_ibfk_1")
  asisten             asisten?          @relation(fields: [asisten_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "kelas_ibfk_2")
  admin               admin?            @relation(fields: [admin_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "kelas_ibfk_3")
  praktikan_kelas     praktikan_kelas[]

  @@index([admin_id], map: "admin_id")
  @@index([asisten_id], map: "asisten_id")
  @@index([mata_kuliah_id], map: "mata_kuliah_id")
}

model laporan {
  id                  Int         @id @default(autoincrement())
  jadwal_id           Int?
  judul               String?     @db.VarChar(120)
  bukti_pertemuan_url String?     @db.Text
  kehadiran           kehadiran[]
  jadwal              jadwal?     @relation(fields: [jadwal_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "laporan_ibfk_1")
  penilaian           penilaian[]

  @@index([jadwal_id], map: "jadwal_id")
}

model mata_kuliah {
  id       Int     @id @default(autoincrement())
  kode     String? @unique(map: "kode") @db.VarChar(120)
  nama     String? @db.VarChar(120)
  admin_id Int?
  kelas    kelas[]
  admin    admin?  @relation(fields: [admin_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "mata_kuliah_ibfk_1")

  @@index([admin_id], map: "admin_id")
}

model praktikan_kelas {
  id           Int                        @id @default(autoincrement())
  praktikan_id Int?
  kelas_id     Int?
  perangkat    praktikan_kelas_perangkat?
  created_at   DateTime?                  @default(dbgenerated("(now())")) @db.Timestamp(0)
  updated_at   DateTime?                  @default(dbgenerated("(now())")) @db.Timestamp(0)
  praktikan    praktikan?                 @relation(fields: [praktikan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "praktikan_kelas_ibfk_1")
  kelas        kelas?                     @relation(fields: [kelas_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "praktikan_kelas_ibfk_2")

  @@index([kelas_id], map: "kelas_id")
  @@index([praktikan_id], map: "praktikan_id")
}

model ruangan {
  id        Int      @id @default(autoincrement())
  nama      String?  @db.VarChar(100)
  kapasitas Json?
  admin_id  Int?
  jadwal    jadwal[]
  admin     admin?   @relation(fields: [admin_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ruangan_ibfk_1")

  @@index([admin_id], map: "admin_id")
}

enum event_jenis {
  pendaftaran_asisten
  pendaftaran_praktikan
  praktikum
}

enum penilaian_tipe {
  pretest
  laporan
  praktikum
  responsi
}

enum praktikan_kelas_perangkat {
  laptop
  komputer_lab
}

enum kehadiran_tipe {
  hadir
  izin
  alpha
}

enum asisten_status {
  diproses
  diterima
  ditolak
}
